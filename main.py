import json

from src.conf import API_KEY, redis
from src.feature.gpt import GptAPI
from src.logger import logger


def change_post(post: str, links: list):
    prompt = f"""
    –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: –¢—ã –≤–≤–µ–¥–µ—à—å —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª, —Ç—ã –æ–¥–∏–Ω –∏–∑ –ª—É—á—à–∏—Ö –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–æ–≤ –ø–ª–∞–Ω–µ—Ç—ã, —Ç–≤–æ—è –≥–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ –¥–æ–≤–æ–¥–∏—Ç—å –¥–æ –ª—é–¥–µ–π –ø—Ä–∞–≤–¥–∏–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏.
    
    –¢–≤–æ–π —à–∞–≥–∏. 
    1. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç. 
    2. –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
    3. –£–ª—É—á—à–∏—Ç—å —Ç–µ–∫—Å—Ç. 
    
    –í–æ—Ç —Å—Å—ã–ª–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–ª–∞–≥–∞–ª–∏—Å—å –∫ –ø–æ—Å—Ç—É - {links}, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å –¥–æ–±–∞–≤—å –∫ –ø–æ—Å—Ç—É
    
    –ü—Ä–∞–≤–∏–ª–∞:
        1.	–ñ–∏–≤–æ–π —è–∑—ã–∫ –∏ –µ–º–∫–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏:
        ‚Ä¢	–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π.
        ‚Ä¢	–ö—Ä–∞—Ç–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —á–∞—Å—Ç–æ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Å–∞—Ä–∫–∞–∑–º–∞: ¬´–§—É–ª–ª–∞ –Ω–µ—Ç, –Ω–æ –≤—ã –¥–µ—Ä–∂–∏—Ç–µ—Å—å¬ª.
        2.	–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ —á–∏—Ç–∞—Ç–µ–ª—è:
        ‚Ä¢	–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–ª–∏ –ø—Ä–∏–∑—ã–≤–æ–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é: ¬´–ë–µ—Ä—ë–º?¬ª, ¬´–°–ª–µ–¥—É—é—â–∏–π –æ—Ç–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä—É–µ–º –≤ –≠—Ä-–†–∏—è–¥–µ¬ª.
        3.	–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è:
    –ú–æ–ª–æ–¥–µ–∂—å –∏ –≤–∑—Ä–æ—Å–ª—ã–µ —Å –∞–∫—Ç–∏–≤–Ω–æ–π –∂–∏–∑–Ω–µ–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–µ–π, –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ—Å—è –Ω–æ–≤–æ—Å—Ç—è–º–∏, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏ –∏ –ø–æ–ø-–∫—É–ª—å—Ç—É—Ä–æ–π.
        4.	–°—Ç–∏–ª—å –∏–∑–ª–æ–∂–µ–Ω–∏—è:
        ‚Ä¢	–†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π, —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∏—Ä–æ–Ω–∏–∏ –∏ —Å–∞—Ä–∫–∞–∑–º–∞.
        ‚Ä¢	–ö—Ä–∞—Ç–∫–∏–µ, —Ü–µ–ø–ª—è—é—â–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –ø–µ—Ä–≤—ã–µ —Ñ—Ä–∞–∑—ã.
        ‚Ä¢	—Å–æ–±–ª—é–¥–∞–π –∫—Ä–∞—Ç–∫–æ—Å—Ç—å
        5.	–§–æ—Ä–º–∞—Ç:
        ‚Ä¢	–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ ‚Äî 1024 —Å–∏–º–≤–æ–ª–∞.
        ‚Ä¢	–í–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ü–∏—Ñ—Ä –∏ —Ñ–∞–∫—Ç–æ–≤ –¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞.
        –ö–æ–Ω–µ—Ü –ø–æ—Å—Ç–∞: –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∏—Ç—å —Å—Å—ã–ª–∫—É –∏ —Å–¥–µ–ª–∞–π –¥–≤–∞ –æ—Ç—Å—Ç—É–ø –æ—Ç —Ç–µ–∫—Å—Ç–∞ –Ω–æ–≤–æ—Å—Ç–∏:
            <a href="https://t.me/OniksNews">üó£Ô∏è –û–Ω–∏–∫—Å | –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è</a>.
    
    –ß—Ç–æ –Ω–µ–ª—å–∑—è –¥–µ–ª–∞—Ç—å:
    
        1.	–û—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è –∏ –¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞—Ü–∏—è:
        ‚Ä¢	–ò–∑–±–µ–≥–∞—Ç—å —Ä–µ–∑–∫–∏—Ö –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏–π –ø–æ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º—É, –ø–æ–ª–æ–≤–æ–º—É –∏–ª–∏ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–º—É –ø—Ä–∏–∑–Ω–∞–∫—É.
        2.	–ù–µ–¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
        3.	–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –∞–≥—Ä–µ—Å—Å–∏—è:
        ‚Ä¢	–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏ –æ—Å–≤–µ—â–µ–Ω–∏–∏ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–µ–º.
        4.	–°–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã:
        ‚Ä¢	–ú–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∂–∞—Ä–≥–æ–Ω, –µ—Å–ª–∏ –æ–Ω –Ω–µ –∫–ª—é—á–µ–≤–æ–π –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è.
        5.	–ß—Ä–µ–∑–º–µ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–µ–≥–∞—Ç–∏–≤–∞:
        ‚Ä¢	–ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏.
        6. –ë–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–º–∞–π–ª–æ–≤
        ‚Ä¢	–°–º–∞–π–ª–∏–∫–∏ –º–æ–≥—É—Ç –±—ã—Ç—å, –Ω–æ —Ç–æ–ª—å–∫–æ –Ω–µ –±–æ–ª—å—à–µ 1 –∑–∞ –ø–æ—Å—Ç
        7. –°—Å—ã–ª–∫–∏ –Ω–∞ –¥—Ä—É–≥–∏–µ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª—ã
        ‚Ä¢	–≤—Å–µ —Å—Å—ã–ª–∫–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –∫—Ä–æ–º–µ —Ç–µ—Ö –∫–æ—Ç–æ—Ä—ã–µ –≤–≤–µ–¥—É—Ç –Ω–∞ –¥—Ä—É–≥–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª, –æ–Ω–∏ –ø–æ—Ö–æ–∂–µ –Ω–∞ https://t.me/

        –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:
        –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¢–û–õ–¨–ö–û —Å–ª–µ–¥—É—é—â–∏–µ —Ç–µ–≥–∏:
        
        <b>bold</b>, <strong>bold</strong>
        <i>italic</i>, <em>italic</em>
        <u>underline</u>, <ins>underline</ins>
        <s>strikethrough</s>, <strike>strikethrough</strike>, <del>strikethrough</del>
        <span class="tg-spoiler">spoiler</span>, <tg-spoiler>spoiler</tg-spoiler>
        <b>bold <i>italic bold <s>italic bold strikethrough <span class="tg-spoiler">italic bold strikethrough spoiler</span></s> <u>underline italic bold</u></i> bold</b>
        <a href="http://www.example.com/">inline URL</a>
        <a href="tg://user?id=123456789">inline mention of a user</a>
        <tg-emoji emoji-id="5368324170671202286">üëç</tg-emoji>
        <code>inline fixed-width code</code>
        <pre>pre-formatted fixed-width code block</pre>
        <pre><code class="language-python">pre-formatted fixed-width code block written in the Python programming language</code></pre>
        <blockquote>Block quotation started\nBlock quotation continued\nThe last line of the block quotation</blockquote>
        <blockquote expandable>Expandable block quotation started\nExpandable block quotation continued\nExpandable block quotation continued\nHidden by default part of the block quotation started\nExpandable block quotation continued\nThe last line of the block quotation</blockquote>

        Please note:
        Only the tags mentioned above are currently supported.
        All <, > and & symbols that are not a part of a tag or an HTML entity must be replaced with the corresponding HTML entities (< with &lt;, > with &gt; and & with &amp;).
        All numerical HTML entities are supported.
        The API currently supports only the following named HTML entities: &lt;, &gt;, &amp; and &quot;.
        Use nested pre and code tags, to define programming language for pre entity.
        Programming language can't be specified for standalone code tags.
        A valid emoji must be used as the content of the tg-emoji tag. The emoji will be shown instead of the custom emoji in places where a custom emoji cannot be displayed (e.g., system notifications) or if the message is forwarded by a non-premium user. It is recommended to use the emoji from the emoji field of the custom emoji sticker.
        
        –ü—Ä–∏–º–µ—Ä, —Ö–æ—Ä–æ—à–æ –ø–æ—Å—Ç–∞: 
        –ò–¥–µ–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –Ω–∞ –¥–µ–∫–∞–±—Ä—å. –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤—ã–ø—É—Å—Ç–∏–ª–∏ –∞–¥–≤–µ–Ω—Ç-–∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å –∑–∞–¥–∞—á–∞–º–∏ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é. 

        Advent of Code 2024 —Ä–∞—Å—Å—á–∏—Ç–∞–Ω –Ω–∞ 25 –¥–Ω–µ–π. –ü–µ—Ä–≤–∞—è –∑–∞–¥–∞—á–∞ —É–∂–µ –¥–æ—Å—Ç—É–ø–Ω–∞. –†–µ—à–∞—Ç—å –º–æ–∂–Ω–æ –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.
        
        –ê–≤—Ç–æ—Ä—ã –≥–æ–≤–æ—Ä—è—Ç, —á—Ç–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –µ—Å—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞ 15 —Å–µ–∫—É–Ω–¥ –Ω–∞ 10-–ª–µ—Ç–Ω–µ–º –∂–µ–ª–µ–∑–µ.
        
        –î–æ–±–∞–≤–ª—è–µ–º –≤ –∑–∞–∫–ª–∞–¥–∫–∏.
    """
    print(prompt)
    client = GptAPI(API_KEY)
    return client.create(prompt=prompt, user_message=post)

def main():
    try:
        message = redis.receive_from_queue(queue_name="text_conversion")
        if message and "content" in message and isinstance(message["content"], str):
            new_post = change_post(message["content"], message["outlinks"])
            json_news = {
                "channel": message["channel"],
                "content": new_post,
                "id_post": message["id_post"]
            }
            redis.send_to_queue(queue_name="ReadyNews", data=json.dumps(json_news))
    except Exception as error:
        logger.error(error)

if __name__ == '__main__':
    logger.info("Start work")
    while True:
        main()