import json

from src.conf import API_KEY, redis
from src.feature.gpt import GptAPI
from src.logger import logger


def change_post(post: str):
    prompt = """
        –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ: –£–ª—É—á—à–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ –¥–ª—è Telegram-–∫–∞–Ω–∞–ª–∞

        –¢—ã ‚Äì –æ–¥–∏–Ω –∏–∑ –ª—É—á—à–∏—Ö –Ω–æ–≤–æ—Å—Ç–Ω—ã—Ö —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äì —É–ª—É—á—à–∏—Ç—å —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞, —Å–æ—Ö—Ä–∞–Ω—è—è –µ–≥–æ —Å—É—Ç—å, –∏ —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –¥–ª—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ Telegram-–∫–∞–Ω–∞–ª–∞.

    –ì–ª–∞–≤–Ω—ã–µ —á–µ—Ä—Ç—ã:

    	1.	–ñ–∏–≤–æ–π —è–∑—ã–∫ –∏ –µ–º–∫–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏:
    	‚Ä¢	–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π, —Å–ª–µ–Ω–≥–∞ –∏ –∏—Ä–æ–Ω–∏–∏: ¬´–ë–µ—Ä—ë–º?¬ª, ¬´–£–≤—ã, —Å—Ö–µ–º–∞ —Ä–∞—Å–∫—Ä—ã–ª–∞—Å—å¬ª.
    	‚Ä¢	–ö—Ä–∞—Ç–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —á–∞—Å—Ç–æ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Å–∞—Ä–∫–∞–∑–º–∞: ¬´–§—É–ª–ª–∞ –Ω–µ—Ç, –Ω–æ –≤—ã –¥–µ—Ä–∂–∏—Ç–µ—Å—å¬ª.
    	2.	–î—Ä–∞–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–∫—Ä–∞—Å–∫–∞:
    	‚Ä¢	–ò—Å—Ç–æ—Ä–∏–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —à–æ–∫-–∫–æ–Ω—Ç–µ–Ω—Ç–∞, –∏–Ω—Ç—Ä–∏–≥–∏ –∏–ª–∏ —Å–∫–∞–Ω–¥–∞–ª–∞: ¬´–î–∏—Ä–µ–∫—Ç–æ—Ä —É–±–∏–ª –≤–æ—Ä–∏—à–∫—É¬ª, ¬´–ü–æ—Ä–Ω–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç–µ–Ω–¥–∞¬ª.
    	3.	–ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –∏ —Ö–∞–π–ø–æ–≤—ã–µ —Ç–µ–º—ã:
    	‚Ä¢	–ü–æ—Å—Ç—ã —Å–≤—è–∑–∞–Ω—ã —Å –Ω–µ–¥–∞–≤–Ω–∏–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏, –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –ª–∏—á–Ω–æ—Å—Ç—è–º–∏ –∏–ª–∏ —Ç—Ä–µ–Ω–¥–∞–º–∏: ¬´–í–∞–∫—Ü–∏–Ω–∞ –æ—Ç –í–ò–ß¬ª, ¬´–†–æ—Å—Ç –∑–∞—Ä–ø–ª–∞—Ç –∫—É—Ä—å–µ—Ä–æ–≤¬ª.
    	4.	–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ —á–∏—Ç–∞—Ç–µ–ª—è:
    	‚Ä¢	–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–ª–∏ –ø—Ä–∏–∑—ã–≤–æ–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é: ¬´–ë–µ—Ä—ë–º?¬ª, ¬´–°–ª–µ–¥—É—é—â–∏–π –æ—Ç–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä—É–µ–º –≤ –≠—Ä-–†–∏—è–¥–µ¬ª.
    	5.	–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ —Ç–µ–º:
    	‚Ä¢	–ù–æ–≤–æ—Å—Ç–∏ –æ—Ö–≤–∞—Ç—ã–≤–∞—é—Ç —à–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä: –æ—Ç –∫—Ä–∏–º–∏–Ω–∞–ª–∞ –¥–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –Ω–æ–≤–æ—Å—Ç–µ–π —à–æ—É-–±–∏–∑–Ω–µ—Å–∞.
    	6.	–¶–∏—Ñ—Ä—ã –∏ —Ñ–∞–∫—Ç—ã:
    	‚Ä¢	–ü—Ä–∏–≤–æ–¥—è—Ç—Å—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã –¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç–∏: ¬´99% –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –ø–æ–ª—É—á–∏–ª–∏ –∏–º–º—É–Ω–∏—Ç–µ—Ç¬ª, ¬´176 –∫–º –ø—É—Ç–µ–π¬ª.

    –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ (–¢–ó) –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤

    	1.	–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è:
    –ú–æ–ª–æ–¥–µ–∂—å –∏ –≤–∑—Ä–æ—Å–ª—ã–µ —Å –∞–∫—Ç–∏–≤–Ω–æ–π –∂–∏–∑–Ω–µ–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–µ–π, –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ—Å—è –Ω–æ–≤–æ—Å—Ç—è–º–∏, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏ –∏ –ø–æ–ø-–∫—É–ª—å—Ç—É—Ä–æ–π.
    	2.	–°—Ç–∏–ª—å –∏–∑–ª–æ–∂–µ–Ω–∏—è:
    	‚Ä¢	–†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π, —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∏—Ä–æ–Ω–∏–∏ –∏ —Å–∞—Ä–∫–∞–∑–º–∞.
    	‚Ä¢	–ö—Ä–∞—Ç–∫–∏–µ, —Ü–µ–ø–ª—è—é—â–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –ø–µ—Ä–≤—ã–µ —Ñ—Ä–∞–∑—ã.
    	3.	–¢–µ–º–∞—Ç–∏–∫–∞ –ø–æ—Å—Ç–æ–≤:
    	‚Ä¢	–¢—Ä–µ–Ω–¥–æ–≤—ã–µ –∏ —Ö–∞–π–ø–æ–≤—ã–µ —Ç–µ–º—ã: —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, —Å–∫–∞–Ω–¥–∞–ª—ã, –∫—Ä–∏–º–∏–Ω–∞–ª, –∑–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç–∏, –∫—Ä—É–ø–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è.
    	‚Ä¢	–õ–æ–∫–∞–ª—å–Ω—ã–µ –∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏.
    	4.	–§–æ—Ä–º–∞—Ç:
    	‚Ä¢	–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ ‚Äî 1024 —Å–∏–º–≤–æ–ª–∞.
    	‚Ä¢	–í–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ü–∏—Ñ—Ä –∏ —Ñ–∞–∫—Ç–æ–≤ –¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞.
    	5.	–ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é:
    	‚Ä¢	–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ –≤–æ–ø—Ä–æ—Å–æ–º –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –¥–ª—è –≤–æ–≤–ª–µ—á–µ–Ω–∏—è: ¬´–ß—Ç–æ –¥—É–º–∞–µ—Ç–µ?¬ª, ¬´–ê –≤—ã –±—ã —Ä–∏—Å–∫–Ω—É–ª–∏?¬ª.

    –ß—Ç–æ –Ω–µ–ª—å–∑—è –¥–µ–ª–∞—Ç—å:

    	1.	–û—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è –∏ –¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞—Ü–∏—è:
    	‚Ä¢	–ò–∑–±–µ–≥–∞—Ç—å —Ä–µ–∑–∫–∏—Ö –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏–π –ø–æ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º—É, –ø–æ–ª–æ–≤–æ–º—É –∏–ª–∏ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–º—É –ø—Ä–∏–∑–Ω–∞–∫—É.
    	2.	–ù–µ–¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
    	3.	–ß—Ä–µ–∑–º–µ—Ä–Ω–æ–µ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ–π –ª–µ–∫—Å–∏–∫–∏:
    	‚Ä¢	–î–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –ª—ë–≥–∫–∞—è –∏—Ä–æ–Ω–∏—è, –Ω–æ –±–µ–∑ –≥—Ä—É–±–æ—Å—Ç–µ–π.
    	4.	–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –∞–≥—Ä–µ—Å—Å–∏—è:
    	‚Ä¢	–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏ –æ—Å–≤–µ—â–µ–Ω–∏–∏ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–µ–º.
    	5.	–°–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã:
    	‚Ä¢	–ú–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∂–∞—Ä–≥–æ–Ω, –µ—Å–ª–∏ –æ–Ω –Ω–µ –∫–ª—é—á–µ–≤–æ–π –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è.
    	6.	–ß—Ä–µ–∑–º–µ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–µ–≥–∞—Ç–∏–≤–∞:
    	‚Ä¢	–ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏.
    	7. –ë–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–º–∞–π–ª–æ–≤
    	‚Ä¢	–°–º–∞–π–ª–∏–∫–∏ –º–æ–≥—É—Ç –±—ã—Ç—å, –Ω–æ —Ç–æ–ª—å–∫–æ –Ω–µ –±–æ–ª—å—à–µ 1-2 –∑–∞ –ø–æ—Å—Ç


        –ü—Ä–∏–º–µ—Ä –ø–æ—Å—Ç–∞
        –ó–∞–≥–æ–ª–æ–≤–æ–∫
        –¢–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏
        –ó–∞–≤–µ—Ä—à–∞—é—â–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        –ö–æ–Ω–µ—Ü –ø–æ—Å—Ç–∞: –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∏—Ç—å —Å—Å—ã–ª–∫—É –∏ —Å–¥–µ–ª–∞—Ç—å –æ—Ç—Å—Ç—É–ø:
            <a href="https://t.me/OniksNews">üó£Ô∏è –û–Ω–∏–∫—Å | –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è</a>.


        –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¢–û–õ–¨–ö–û —Å–ª–µ–¥—É—é—â–∏–µ —Ç–µ–≥–∏:
        <b>bold</b>, <strong>bold</strong>
        <i>italic</i>, <em>italic</em>
        <u>underline</u>, <ins>underline</ins>
        <s>strikethrough</s>, <strike>strikethrough</strike>, <del>strikethrough</del>
        <span class="tg-spoiler">spoiler</span>, <tg-spoiler>spoiler</tg-spoiler>
        <b>bold <i>italic bold <s>italic bold strikethrough <span class="tg-spoiler">italic bold strikethrough spoiler</span></s> <u>underline italic bold</u></i> bold</b>
        <a href="http://www.example.com/">inline URL</a>
        <a href="tg://user?id=123456789">inline mention of a user</a>
        <tg-emoji emoji-id="5368324170671202286">üëç</tg-emoji>
        <code>inline fixed-width code</code>
        <pre>pre-formatted fixed-width code block</pre>
        <pre><code class="language-python">pre-formatted fixed-width code block written in the Python programming language</code></pre>
        <blockquote>Block quotation started\nBlock quotation continued\nThe last line of the block quotation</blockquote>
        <blockquote expandable>Expandable block quotation started\nExpandable block quotation continued\nExpandable block quotation continued\nHidden by default part of the block quotation started\nExpandable block quotation continued\nThe last line of the block quotation</blockquote>

        Please note:
        Only the tags mentioned above are currently supported.
        All <, > and & symbols that are not a part of a tag or an HTML entity must be replaced with the corresponding HTML entities (< with &lt;, > with &gt; and & with &amp;).
        All numerical HTML entities are supported.
        The API currently supports only the following named HTML entities: &lt;, &gt;, &amp; and &quot;.
        Use nested pre and code tags, to define programming language for pre entity.
        Programming language can't be specified for standalone code tags.
        A valid emoji must be used as the content of the tg-emoji tag. The emoji will be shown instead of the custom emoji in places where a custom emoji cannot be displayed (e.g., system notifications) or if the message is forwarded by a non-premium user. It is recommended to use the emoji from the emoji field of the custom emoji sticker.

        –ö–∞–∫ —Ç—ã —Å–¥–µ–ª–∞–µ—à—å —ç—Ç–æ—Ç –ø–æ—Å—Ç. 
        –°–Ω–∞—á–∞–ª–∞ —Ç—ã —Å–¥–µ–ª–∞–µ—à—å —Å–µ–±–µ 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞, –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ç—ã –≤—ã–±–µ—Ä–µ—à—å –ª—É—á—à–∏–π –∏–∑ –Ω–∏—Ö –∏ –æ—Ç–ø—Ä–∞–≤–∏—à—å –µ–≥–æ. –û—Ç–ø—Ä–∞–≤–ª—è–π –º–Ω–µ —Ç–æ–ª—å–∫–æ –≥–æ—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç.
    """
    client = GptAPI(API_KEY)
    return client.create(prompt=prompt, user_message=post)

def main():
    try:
        message = redis.receive_from_queue(queue_name="processing")
        if message and "content" in message and isinstance(message["content"], str):
            new_post = change_post(message["content"])
            json_news = {
                "channel": message["channel"],
                "content": new_post,
                "id_post": message["id_post"]
            }
            redis.send_to_queue(queue_name="ReadyNews", data=json.dumps(json_news))
    except Exception as error:
        logger.error(error)

if __name__ == '__main__':
    logger.info("Start work")
    while True:
        main()